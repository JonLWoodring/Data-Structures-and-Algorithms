/*
Jon Woodring
Professor Haynes
https://github.com/JonLWoodring/Intro-To-Computing-Systems1/edit/master/NchooseK1
*/

import java.util.Random;
import java.util.Scanner;
public class NchooseK1 
{
	public static void main(String[] args)
	{
		Scanner keyboard = new Scanner(System.in);
		int dataSetSize;
		int numbersChosen;
		System.out.println("Input N and K");
		dataSetSize = keyboard.nextInt();
		numbersChosen = keyboard.nextInt();
		int[] rndmArray = new int[dataSetSize];
		Random rndm = new Random();
		int[] chosen = new int[numbersChosen];
		
		System.out.println("Data set:");
			for(int y = 0; y < dataSetSize; y++)
			{
				rndmArray[y] = rndm.nextInt(100) + 1; ;
			}
			for(int t = 0; t < dataSetSize; t++)
				System.out.print(" " + rndmArray[t]);
			
			System.out.println();
			
			System.out.println("The random values are:");
			
			int randomArrayIndex;
			long curTime = System.nanoTime();
				for(int x = 0; x < numbersChosen; x++)
				{
					randomArrayIndex = rndm.nextInt(dataSetSize);
					chosen[x] = randomArrayIndex;
				}
					for(int z = 0; z < numbersChosen; z++)
					{
						for(int y = 0; y < numbersChosen; y++)
						{
							if(y != z)
							{
								if(chosen[y] == chosen[z])
								{
									for(int x = 0; x < numbersChosen; x++)
									{
										randomArrayIndex = rndm.nextInt(dataSetSize);
										chosen[x] = randomArrayIndex;
									}
									z = 0;
									y = 0;
								}
							}
						}
					}			
				curTime = System.nanoTime() - curTime;
			for(int x = 0; x < chosen.length; x++)
			{
				System.out.print(" " + rndmArray[chosen[x]]);
			}	
			System.out.println();
			System.out.println("Execution time: " + curTime);
	}
