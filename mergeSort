/*
 * Jon Woodring
 * Professor Haynes
 * 12/12/2016
 * https://github.com/JonLWoodring/Data-Structures-and-Algorithms/blob/master/mergeSort
 */

import java.util.Arrays;

public class MergeSort 
{
	public static void main(String[] args)
	{
		String[] input = {"ikeji","bahorski", "chaudhuri", "evett", "haynes", "maniccam", "moore", "narayanan", "panja", "poh",	"sverdlik", "tehranipour", "zeiger", "zhang", "cowan", "francis", "mansour"};
		mergeSort(input);
        System.out.println(Arrays.toString(input));

	}

public static void mergeSort(String[] theInput) {
    if (theInput.length >= 2) {
        String[] left = new String[theInput.length / 2];
        String[] right = new String[theInput.length-theInput.length / 2];

        for (int t = 0; t < left.length; t++)
        {
            left[t] = theInput[t];
        }
        for (int i = 0; i < right.length; i++)
        {
            right[i] = theInput[i + theInput.length / 2];
        }

        mergeSort(left);
        mergeSort(right);

        merge(theInput, left, right);
    }
}

public static void merge(String[] result, String[] left, String[] right) {
    int i1 = 0;
    int i2 = 0;
    for (int i = 0; i < result.length; i++) {
    	 if (i2 >= right.length || (i1 < left.length &&
                 left[i1].compareToIgnoreCase(right[i2])<0)) {
                  result[i] = left[i1];
                  i1++;
             } else {
                  result[i] = right[i2];
                  i2++;
             }
        }
}
}
